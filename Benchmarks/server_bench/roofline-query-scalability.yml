#
#  This is statistics aggregation recipe for Bearysta.
#
#  Install Bearysta:
#     python -m pip install git+https://github.com/IntelPython/bearysta.git
#
#  Run aggregation:
#     python -m bearysta.aggregate omnisci-query-scalability.yml -P
#

input:
    path: runs/*/run-roofline-scalability/*/*.csv
    # csv header is: operation,part,threads,GiB/s,IPS(M)
    format: csv

rename:
#    OMP_NUM_THREADS: threads
    GiB/s: GB_s

# Aggregation method (e.g. min, median, max, mean)
aggregation: max

# Axis and series column names
axis:
    - config
    #- operation
    - part

series:
    - threads

values:
    - GB_s

# Create another table (or Excel filter) for each value in these columns
variants:
    - hostname

# Are higher values better?
higher-is-better: true

# Number format in Python str.format() style, or the number of digits of
# precision to show in numbers in pretty-printed pivot tables
number-format: 2

# Do we figure out the number of decimals only once, using the max value,
# and disregard smaller precision numbers?
number-format-max-only: false
